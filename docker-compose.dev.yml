
#this file you can run as follow command:
#docker-compose -f docker-compose.mysql.yml up -d
# services:
#   db:
#     image: mysql:8.0.33
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     volumes:
#       - ./dataQA:/var/lib/mysql
#     container_name: LMirofdbQA
#     environment:
#       MYSQL_ROOT_PASSWORD: LMirof2024
#       MYSQL_DATABASE: lmirofdb
#       MYSQL_USER: admin
#       MYSQL_PASSWORD: adminqa
#     ports:
#       - "3361:3306"
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8081:8080

#this file you can run as follow command:
#docker-compose -f docker-compose.dev.yml up -d
#docker-compose -f docker-compose.dev.yaml up --build
version: '3'
services:
  db_dev:
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./dataDev:/var/lib/mysql
    container_name: LMirofdbDev
    environment:
      MYSQL_ROOT_PASSWORD: LMirof2024
      MYSQL_DATABASE: lmirofdbdev
      MYSQL_USER: admin
      MYSQL_PASSWORD: admindev
    ports:
      - "3351:3306"
  backend_dev:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - REQUIREMENTS_FILE=requirements.txt
    command: sh -c "python LMIROF_Core/manage.py makemigrations &&
                    python LMIROF_Core/manage.py migrate &&
                    python LMIROF_Core/manage.py loaddata initial_data &&
                    python LMIROF_Core/manage.py runserver 0.0.0.0:8000"
    container_name: LMirofBackendDev
    restart: always
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
    env_file:
      - ./LMIROF_Core/.env
  adminer:
    image: adminer
    container_name: adminerDev
    restart: always
    ports:
      - 8081:8080
# volumes:
#   - data_dev:
